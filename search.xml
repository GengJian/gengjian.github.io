<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Android项目搭建</title>
    <url>/2022/09/30/Android%E9%A1%B9%E7%9B%AE%E6%90%AD%E5%BB%BA%E4%B8%8D%E5%AE%8C%E5%85%A8%E8%AE%B0%E5%BD%95/</url>
    <content><![CDATA[<h2 id="版本汇总"><a href="#版本汇总" class="headerlink" title="版本汇总"></a>版本汇总</h2><p><img src="https://upload-images.jianshu.io/upload_images/708960-d0738f866e49003f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Android OS用户分布 2021-09-01.png"></p>
<h2 id="创建工程"><a href="#创建工程" class="headerlink" title="创建工程"></a>创建工程</h2><p>通过模版创建<br><img src="https://upload-images.jianshu.io/upload_images/708960-3e137dc21eb10153.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="EmptyActivity模版.png"><br><strong>Name：</strong>项目名称；项目目录文件夹的名称，会默认展示在启动页，一般要求开头大写。<br><strong>Package name：</strong>唯一包名；在应用市场区分身份标识，用于更新覆盖等。<br><strong>Mininum SDK:</strong> 支持的最低Android OS版本；应用市场可通过此版本检查用户手机是否可以安装；但如果低于最低版本的用户通过直接安装apk或者aab文件的话，可能出现可以安装但无法打开的情况。<br><strong>Use legacy android.support libraries：</strong>如果您的应用需要旧版库支持，请选中复选框。</p>
<h2 id="同步Gradle"><a href="#同步Gradle" class="headerlink" title="同步Gradle"></a>同步Gradle</h2><p>Gradle 是一个开源构建自动化工具，专注于灵活性和性能。可以说是接管了Android中的包管理工具及编译打包等流程。</p>
<p>当我们启动项目时，AndroidStudio会自动执行一次同步。</p>
<h2 id="分析文件目录Directory"><a href="#分析文件目录Directory" class="headerlink" title="分析文件目录Directory"></a>分析文件目录Directory</h2><p><strong>MainActivity</strong> 是应用的主入口；相当于iOS创建项目时自带的ViewController；<br><strong>activity_main</strong>位于res&#x2F;layout目录中，是MainActivity的UI布局文件；相当于iOS中的xib文件，通过预览的方式实现所见即所得；<br><strong>AndroidManifest.xml</strong>是应用的清单文件，描述了应用的基本特性并定义了每个应用组件；相当于iOS中的Build Phase配置；</p>
<h2 id="分析脚本目录Script"><a href="#分析脚本目录Script" class="headerlink" title="分析脚本目录Script"></a>分析脚本目录Script</h2><p>有两个使用此名称的文件：一个针对项目“Project: My First App”，相当于iOS中的Project Setting，另一个针对应用模块“Module: My_First_App.app”，相当于iOS中的 Target Setting。每个模块均有自己的 <code>build.gradle</code> 文件。</p>
<h2 id="运行调试"><a href="#运行调试" class="headerlink" title="运行调试"></a>运行调试</h2><ol>
<li>可采用真机调试，需要安装对应的驱动，并打开设备的开发者模式；</li>
<li>可采用模拟器（AVD Manager）；</li>
</ol>
<p>通过点击IDE的▶️按钮开始运行即可。</p>
]]></content>
      <categories>
        <category>Android</category>
      </categories>
  </entry>
  <entry>
    <title>Python 环境配置记录</title>
    <url>/2022/04/30/Python%E5%85%A5%E5%9D%91/</url>
    <content><![CDATA[<h2 id="IDE"><a href="#IDE" class="headerlink" title="IDE"></a>IDE</h2><ul>
<li>官方的：IDEL+Python Luncher</li>
<li>好用的：PyCharm</li>
<li>命令行的</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">sudo pip install --upgrade pip</span><br><span class="line">sudo pip install ipython</span><br><span class="line">➜  ~ python -m IPython</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>清理Xcode相关垃圾</title>
    <url>/2021/10/01/Tools-%E6%B8%85%E7%90%86Mac%E7%A1%AC%E7%9B%98%E4%B9%8Bxcode%E7%9B%B8%E5%85%B3%E5%9E%83%E5%9C%BE/</url>
    <content><![CDATA[<h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>无论是我们的开发机器，还是打包机MacMini，经常因为缓存文件或打包文件过多导致硬盘不足。</p>
<p>所以我们需要定期清理垃圾文件。</p>
<h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><p>需要删除Xcode编译器产生的索引文件及中间产物目录DriverData。<br>需要删除Xcode打包完成的Archive文件目录。<br>需要删除每次连接真机后自动下载的调试包（类似Android的adb文件）DeviceSupport。<br>需要删除不必要的模拟器（每次增量升级xcode，原有的模拟器数据会保留，持久占用硬盘）。</p>
<hr>
<p> 常用来查询硬盘大小及使用率的Linux命令。<br> 一般直接用 df<br>df</p>
<p>df命令可以获取硬盘被占用了多少空间，目前还剩下多少空间等信息，它也可以显示所有文件系统对i节点和磁盘块的使用情况。</p>
<p>df命令各个选项的含义如下：</p>
<p>  -a：显示所有文件系统的磁盘使用情况，包括0块（block）的文件系统，如&#x2F;proc文件系统。<br>  -k：以k字节为单位显示。<br>  -i：显示i节点信息，而不是磁盘块。<br>  -t：显示各指定类型的文件系统的磁盘空间使用情况。<br>  -x：列出不是某一指定类型文件系统的磁盘空间使用情况（与t选项相反）。<br>  -T：显示文件系统类型。</p>
<p>du<br>du的英文原义为“disk usage”，含义为显示磁盘空间的使用情况，统计目录（或文件）所占磁盘空间的大小。该命令的功能是逐级进入指定目录的每一个子目录并显示该目录占用文件系统数据块（1024字节）的情况。若没有给出指定目录，则对当前目录进行统计。</p>
<p>df命令的各个选项含义如下：</p>
<p>  -s：对每个Names参数只给出占用的数据块总数。<br>  -a：递归地显示指定目录中各文件及子目录中各文件占用的数据块数。若既不指定-s，也不指定-a，则只显示Names中的每一个目录及其中的各子目录所占的磁盘块数。<br>  -b：以字节为单位列出磁盘空间使用情况（系统默认以k字节为单位）。<br>  -k：以1024字节为单位列出磁盘空间使用情况。<br>  -c：最后再加上一个总计（系统默认设置）。<br>  -l：计算所有的文件大小，对硬链接文件，则计算多次。<br>  -x：跳过在不同文件系统上的目录不予统计。<br>fdisk</p>
<p>fdisk可以划分磁盘分区。下面给出使用Fdisk命令进行磁盘分区的操作步骤：<br>     #fdisk &#x2F;dev&#x2F;had    &#x2F;&#x2F;使用&#x2F;dev&#x2F;had作为默认的分区设备<br>     Command (m for help): m  &#x2F;&#x2F;选择命令选项<br>     Command action<br>   a   toggle a bootable flag<br>   b   edit bsd disklabel<br>   c   toggle the dos compatibility flag<br>   d   delete a partition<br>   l   list known partition types<br>   m   print this menu<br>   n   add a new partition<br>   o   create a new empty DOS partition table<br>   p   print the partition table<br>   q   quit without saving changes<br>   s   create a new empty Sun disklabel<br>   t   change a partition’s system id<br>   u   change display&#x2F;entry units<br>   v   verify the partition table<br>   w   write table to disk and exit<br>   x   extra functionality (experts only)<br>用户通过提示键入“m”，可以显示Fdisk命令各个参数的说明。</p>
<p>相关的文章<br>Jenkins上使用的脚本备份</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/sh</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">先查询一下当前硬盘空间</span></span><br><span class="line">echo &quot;🌞 0、开始清理前硬盘空间&quot;</span><br><span class="line">df -lh</span><br><span class="line"></span><br><span class="line">echo &quot;------------1、准备删除 ~/Library/Developer/Xcode/DerivedData&quot;</span><br><span class="line">for file in ~/Library/Developer/Xcode/DerivedData/*;do</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">确定是目录</span></span><br><span class="line">if test -d $file;then</span><br><span class="line">echo &quot;删除---&gt;&quot;$file</span><br><span class="line">rm -rf $file</span><br><span class="line">fi</span><br><span class="line">done</span><br><span class="line"></span><br><span class="line">echo &quot;------------2、准备删除 /Users/lebbay/DerivedData&quot;</span><br><span class="line">for file in /Users/lebbay/DerivedData/*;do</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">确定是目录</span></span><br><span class="line">if test -d $file;then</span><br><span class="line">echo &quot;删除---&gt;&quot;$file</span><br><span class="line">rm -rf $file</span><br><span class="line">fi</span><br><span class="line">done</span><br><span class="line"></span><br><span class="line">echo &quot;------------3、准备删除 ~/Library/Developer/Xcode/Archives&quot;</span><br><span class="line">for file in ~/Library/Developer/Xcode/Archives/*;do </span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">确定是目录</span> </span><br><span class="line">if test -d $file;then</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">不是今天的都删掉</span></span><br><span class="line">today=$(date &quot;+%Y-%m-%d&quot;)</span><br><span class="line">if [[ ! $file =~ $today ]];then</span><br><span class="line">echo &quot;删除---&gt;&quot;$file</span><br><span class="line">rm -rf $file</span><br><span class="line">fi</span><br><span class="line">fi</span><br><span class="line">done</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">echo &quot;------------4、准备删除 /Users/lebbay/Archives&quot;</span><br><span class="line">for file in /Users/lebbay/Archives/*;do </span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">确定是目录</span></span><br><span class="line">if test -d $file;then</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">不是今天的都删掉</span></span><br><span class="line">today=$(date &quot;+%Y-%m-%d&quot;)</span><br><span class="line">if [[ ! $file =~ $today ]];then</span><br><span class="line">echo &quot;删除---&gt;&quot;$file</span><br><span class="line">rm -rf $file</span><br><span class="line">fi</span><br><span class="line">fi</span><br><span class="line">done</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">echo &quot;------------5、准备删除 ~/Library/Developer/CoreSimulator/Devices，仅保留 SE 机型&quot;</span><br><span class="line"></span><br><span class="line">for file in ~/Library/Developer/CoreSimulator/Devices/*;do</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">确定是目录</span></span><br><span class="line">if test -d $file;then</span><br><span class="line">device_plist=&quot;$&#123;file&#125;/device.plist&quot;</span><br><span class="line">device_plist_text=`cat $device_plist`</span><br><span class="line">se_line=&quot;&lt;string&gt;com.apple.CoreSimulator.SimDeviceType.iPhone-SE&quot;</span><br><span class="line">if [[ ! $device_plist_text =~ $se_line ]]; then</span><br><span class="line">echo &quot;删除---&gt;&quot;$file</span><br><span class="line">rm -rf $file</span><br><span class="line">else</span><br><span class="line">echo &quot;保留---&gt;&quot;$file</span><br><span class="line">fi</span><br><span class="line">fi</span><br><span class="line">done</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">echo &quot;------------6、准备删除 ~/Library/Developer/Xcode/iOS\ DeviceSupport，保留自动化测试常用系统&quot;</span><br><span class="line">for file in ~/Library/Developer/Xcode/iOS\ DeviceSupport/*;do</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">手机系统升级之后就不好使喽。。。</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">iPhone 8 序列号：F4GX3EK1JC6F</span></span><br><span class="line">iphone_13_3_1=&quot;/13.3.1&quot;</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">iPhone X 序列号：G0NVPS22JCLF</span></span><br><span class="line">iphone_14_0_1=&quot;/14.0.1&quot;</span><br><span class="line">if [[ $file =~ $iphone_13_3_1 ]]; then</span><br><span class="line">echo &quot;保留---&gt;&quot;$file</span><br><span class="line">elif [[ $file =~ $iphone_14_0_1 ]]; then</span><br><span class="line">echo &quot;保留---&gt;&quot;$file</span><br><span class="line">else</span><br><span class="line">echo &quot;删除---&gt;&quot;$file</span><br><span class="line">rm -rf $file</span><br><span class="line">fi</span><br><span class="line">done</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">最后查询一下当前硬盘空间</span></span><br><span class="line">echo &quot;🌛 0、开始清理前硬盘空间&quot;</span><br><span class="line">df -lh</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>iOS</tag>
        <tag>Mac</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2015/06/28/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>搭建Hexo Blog并自动发布至Github Pages</title>
    <url>/2022/01/20/%E6%90%AD%E5%BB%BAHexo-Blog%E5%B9%B6%E8%87%AA%E5%8A%A8%E5%8F%91%E5%B8%83%E8%87%B3Github-Pages/</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>简书迁移分割线</title>
    <url>/2023/05/11/%E7%AE%80%E4%B9%A6%E8%BF%81%E7%A7%BB%E8%AE%B0%E5%BD%95/</url>
    <content><![CDATA[<p>打包2023年05月12日前简书博客，待调整样式及归档。</p>
]]></content>
      <tags>
        <tag>Backup</tag>
      </tags>
  </entry>
</search>
